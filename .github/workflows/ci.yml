name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.10', '3.11']

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt -r requirements-dev.txt

    - name: Lint with flake8
      run: |
        # Stop build if there are Python syntax errors or undefined names
        flake8 src tests --count --select=E9,F63,F7,F82 --show-source --statistics
        # Exit-zero treats all errors as warnings
        flake8 src tests --count --max-line-length=120 --statistics --exit-zero

    - name: Type check with mypy
      run: |
        mypy src --ignore-missing-imports

    - name: Test with pytest
      run: |
        pytest tests/ --cov=src --cov-report=xml --cov-report=term -v

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false

  docker:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Build Docker image
      run: |
        docker build -t hse-contrast-checker:test .

    - name: Test Docker image
      run: |
        docker run hse-contrast-checker:test --help

    - name: Test Docker with example
      run: |
        mkdir -p output
        docker run -v $(pwd)/examples:/app/examples:ro -v $(pwd)/output:/app/output \
          hse-contrast-checker:test --slide-json /app/examples/slide_color_bg.json || true

  code-quality:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install black

    - name: Check code formatting with Black
      run: |
        black --check --line-length 120 src tests
